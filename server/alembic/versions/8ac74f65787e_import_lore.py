"""Import lores

Revision ID: 8ac74f65787e
Revises: 2a22c5ee299f
Create Date: 2025-01-27 22:46:51.433973

"""
from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '8ac74f65787e'
down_revision: Union[str, None] = '2a22c5ee299f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lorebook',
                    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('lorebook', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lorebook_id'), ['id'], unique=False)

    op.create_table('lorebookchapter',
                    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('lore_book_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('parent_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('header', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('footer', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('greedy', sa.Boolean(), nullable=False),
                    sa.Column('display_order', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['lore_book_id'], ['lorebook.id'], ),
                    sa.ForeignKeyConstraint(['parent_id'], ['lorebookchapter.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('lorebookchapter', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lorebookchapter_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lorebookchapter_lore_book_id'), ['lore_book_id'], unique=False)

    op.create_table('lores',
                    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('lore_book_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('chapter_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('keyword', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('searchable', sa.Boolean(), nullable=False),
                    sa.Column('attached', sa.Boolean(), nullable=False),
                    sa.Column('always', sa.Boolean(), nullable=False),
                    sa.Column('display_order', sa.Integer(), nullable=False),
                    sa.Column('order', sa.Integer(), nullable=False),
                    sa.Column('priority', sa.Integer(), nullable=False),
                    sa.Column('summary_priority', sa.Integer(), nullable=False),
                    sa.Column('throw_on_summarize', sa.Boolean(), nullable=False),
                    sa.Column('summarized_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.ForeignKeyConstraint(['chapter_id'], ['lorebookchapter.id'], ),
                    sa.ForeignKeyConstraint(['lore_book_id'], ['lorebook.id'], ),
                    sa.ForeignKeyConstraint(['summarized_id'], ['lores.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('lores', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lore_chapter_id'), ['chapter_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lore_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lore_lore_book_id'), ['lore_book_id'], unique=False)

    op.create_table('lorebookreader',
                    sa.Column('reader_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('lore_book_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('search_depth', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['lore_book_id'], ['lorebook.id'], ),
                    sa.ForeignKeyConstraint(['reader_id'], ['room.id'], ),
                    sa.PrimaryKeyConstraint('reader_id', 'lore_book_id')
                    )
    with op.batch_alter_table('lorebookreader', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lorebookreader_lore_book_id'), ['lore_book_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lorebookreader_reader_id'), ['reader_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('lorebookreader', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lorebookreader_reader_id'))
        batch_op.drop_index(batch_op.f('ix_lorebookreader_lore_book_id'))

    op.drop_table('lorebookreader')
    with op.batch_alter_table('lores', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lore_lore_book_id'))
        batch_op.drop_index(batch_op.f('ix_lore_id'))
        batch_op.drop_index(batch_op.f('ix_lore_chapter_id'))

    op.drop_table('lores')
    with op.batch_alter_table('lorebookchapter', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lorebookchapter_lore_book_id'))
        batch_op.drop_index(batch_op.f('ix_lorebookchapter_id'))

    op.drop_table('lorebookchapter')
    with op.batch_alter_table('lorebook', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lorebook_id'))

    op.drop_table('lorebook')
    # ### end Alembic commands ###
